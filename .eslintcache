[{"E:\\VSCO\\quora-clone\\src\\index.js":"1","E:\\VSCO\\quora-clone\\src\\App.js":"2","E:\\VSCO\\quora-clone\\src\\serviceWorker.js":"3","E:\\VSCO\\quora-clone\\src\\app\\store.js":"4","E:\\VSCO\\quora-clone\\src\\components\\Quora.js":"5","E:\\VSCO\\quora-clone\\src\\components\\QHeader.js":"6","E:\\VSCO\\quora-clone\\src\\components\\Sidebar.js":"7","E:\\VSCO\\quora-clone\\src\\components\\SidebarOptions.js":"8","E:\\VSCO\\quora-clone\\src\\components\\Feed.js":"9","E:\\VSCO\\quora-clone\\src\\components\\QuorBox.js":"10","E:\\VSCO\\quora-clone\\src\\components\\Post.js":"11","E:\\VSCO\\quora-clone\\src\\components\\Widget.js":"12","E:\\VSCO\\quora-clone\\src\\components\\WidgetContent.js":"13","E:\\VSCO\\quora-clone\\src\\features\\userSlice.js":"14","E:\\VSCO\\quora-clone\\src\\components\\auth\\Login.js":"15","E:\\VSCO\\quora-clone\\src\\firebase.js":"16","E:\\VSCO\\quora-clone\\src\\features\\questionSlice.js":"17","S:\\quora-clone\\src\\index.js":"18","S:\\quora-clone\\src\\App.js":"19","S:\\quora-clone\\src\\serviceWorker.js":"20","S:\\quora-clone\\src\\app\\store.js":"21","S:\\quora-clone\\src\\firebase.js":"22","S:\\quora-clone\\src\\features\\questionSlice.js":"23","S:\\quora-clone\\src\\components\\Quora.js":"24","S:\\quora-clone\\src\\components\\auth\\Login.js":"25","S:\\quora-clone\\src\\features\\userSlice.js":"26","S:\\quora-clone\\src\\components\\Widget.js":"27","S:\\quora-clone\\src\\components\\Feed.js":"28","S:\\quora-clone\\src\\components\\QHeader.js":"29","S:\\quora-clone\\src\\components\\Post.js":"30","S:\\quora-clone\\src\\components\\WidgetContent.js":"31","S:\\quora-clone\\src\\components\\QuorBox.js":"32"},{"size":644,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":922,"mtime":1611431031419,"results":"35","hashOfConfig":"34"},{"size":5141,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":276,"mtime":1611735375328,"results":"37","hashOfConfig":"34"},{"size":426,"mtime":1611407620590,"results":"38","hashOfConfig":"34"},{"size":5370,"mtime":1611733161530,"results":"39","hashOfConfig":"34"},{"size":242,"mtime":1611389964160,"results":"40","hashOfConfig":"34"},{"size":2643,"mtime":1611398407939,"results":"41","hashOfConfig":"34"},{"size":910,"mtime":1611834183980,"results":"42","hashOfConfig":"34"},{"size":905,"mtime":1611834225787,"results":"43","hashOfConfig":"34"},{"size":6196,"mtime":1611834293280,"results":"44","hashOfConfig":"34"},{"size":382,"mtime":1611410517693,"results":"45","hashOfConfig":"34"},{"size":2424,"mtime":1611411461387,"results":"46","hashOfConfig":"34"},{"size":462,"mtime":1611414687710,"results":"47","hashOfConfig":"34"},{"size":4480,"mtime":1611494736049,"results":"48","hashOfConfig":"34"},{"size":619,"mtime":1611427978412,"results":"49","hashOfConfig":"34"},{"size":626,"mtime":1611488948375,"results":"50","hashOfConfig":"34"},{"size":644,"mtime":1617275739985,"results":"51","hashOfConfig":"52"},{"size":922,"mtime":1617275739978,"results":"53","hashOfConfig":"52"},{"size":5141,"mtime":1617275739985,"results":"54","hashOfConfig":"52"},{"size":276,"mtime":1617275739978,"results":"55","hashOfConfig":"52"},{"size":649,"mtime":1617291118035,"results":"56","hashOfConfig":"52"},{"size":626,"mtime":1617275739984,"results":"57","hashOfConfig":"52"},{"size":371,"mtime":1617284675686,"results":"58","hashOfConfig":"52"},{"size":4234,"mtime":1617287243036,"results":"59","hashOfConfig":"52"},{"size":462,"mtime":1617275739984,"results":"60","hashOfConfig":"52"},{"size":376,"mtime":1617289356889,"results":"61","hashOfConfig":"52"},{"size":910,"mtime":1617275739979,"results":"62","hashOfConfig":"52"},{"size":4354,"mtime":1617286330277,"results":"63","hashOfConfig":"52"},{"size":5803,"mtime":1617286927469,"results":"64","hashOfConfig":"52"},{"size":1875,"mtime":1617284716781,"results":"65","hashOfConfig":"52"},{"size":847,"mtime":1617284010053,"results":"66","hashOfConfig":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"smkil2",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"18u0gsx",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"103"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"E:\\VSCO\\quora-clone\\src\\index.js",[],"E:\\VSCO\\quora-clone\\src\\App.js",[],"E:\\VSCO\\quora-clone\\src\\serviceWorker.js",[],"E:\\VSCO\\quora-clone\\src\\app\\store.js",[],"E:\\VSCO\\quora-clone\\src\\components\\Quora.js",[],"E:\\VSCO\\quora-clone\\src\\components\\QHeader.js",[],"E:\\VSCO\\quora-clone\\src\\components\\Sidebar.js",[],"E:\\VSCO\\quora-clone\\src\\components\\SidebarOptions.js",[],"E:\\VSCO\\quora-clone\\src\\components\\Feed.js",[],"E:\\VSCO\\quora-clone\\src\\components\\QuorBox.js",[],"E:\\VSCO\\quora-clone\\src\\components\\Post.js",[],"E:\\VSCO\\quora-clone\\src\\components\\Widget.js",[],"E:\\VSCO\\quora-clone\\src\\components\\WidgetContent.js",[],"E:\\VSCO\\quora-clone\\src\\features\\userSlice.js",[],"E:\\VSCO\\quora-clone\\src\\components\\auth\\Login.js",[],"E:\\VSCO\\quora-clone\\src\\firebase.js",[],"E:\\VSCO\\quora-clone\\src\\features\\questionSlice.js",[],"S:\\quora-clone\\src\\index.js",[],["135","136"],"S:\\quora-clone\\src\\App.js",[],"S:\\quora-clone\\src\\serviceWorker.js",[],"S:\\quora-clone\\src\\app\\store.js",[],"S:\\quora-clone\\src\\firebase.js",[],"S:\\quora-clone\\src\\features\\questionSlice.js",[],"S:\\quora-clone\\src\\components\\Quora.js",[],"S:\\quora-clone\\src\\components\\auth\\Login.js",[],"S:\\quora-clone\\src\\features\\userSlice.js",[],"S:\\quora-clone\\src\\components\\Widget.js",[],"S:\\quora-clone\\src\\components\\Feed.js",[],"S:\\quora-clone\\src\\components\\QHeader.js",["137"],"import React, { useState } from \"react\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Modal from \"react-modal\";\r\nimport ClarifyLogo from './img/Clarify.png';\r\nimport \"./QHeader.css\";\r\nimport { Avatar, Button, Input } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport db, { auth } from \"../firebase\";\r\nimport { ExpandMore, Link } from \"@material-ui/icons\";\r\nimport firebase from \"firebase\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction QHeader() {\r\n  const user = useSelector(selectUser);\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [inputUrl, setInputUrl] = useState(\"\");\r\n  const questionName = input;\r\n\r\n  const handleQuestion = (e) => {\r\n    e.preventDefault();\r\n    setIsModalOpen(false);\r\n\r\n    if (questionName) {\r\n      db.collection(\"questions\").add({\r\n        user: user,\r\n        question: input,\r\n        imageUrl: inputUrl,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n\r\n    setInput(\"\");\r\n    setInputUrl(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"qHeader\">\r\n      <div className=\"qHeader__logo\">\r\n        <img src={ClarifyLogo} alt=\"CLARIFY-LOGO\" />\r\n      </div>\r\n\r\n      <div className=\"qHeader__Rem\">\r\n        <div className=\"qHeader__input\">\r\n            <SearchIcon />\r\n            <input type=\"text\" placeholder=\"Search ...\" />\r\n        </div>\r\n\r\n        <Button onClick={() => setIsModalOpen(true)}>Ask A Question</Button>\r\n        <Modal\r\n          isOpen={IsmodalOpen}\r\n          onRequestClose={() => setIsModalOpen(false)}\r\n          shouldCloseOnOverlayClick={false}\r\n          style={{\r\n            overlay: {\r\n              width: 700,\r\n              height: 600,\r\n              backgroundColor: \"rgba(0,0,0,0.8)\",\r\n              zIndex: \"1000\",\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              marginTop: \"-300px\",\r\n              marginLeft: \"-350px\",\r\n            },\r\n          }}\r\n        >\r\n          <div className=\"modal__title\">\r\n            <h5>Add Question</h5>\r\n          </div>\r\n          <div className=\"modal__info\">\r\n            <Avatar\r\n              className=\"avatar\"\r\n              src={\r\n                user.photo\r\n                  ? user.photo\r\n                  : \"https://pbs.twimg.com/profile_images/716487122224439296/HWPluyjs.jpg\"\r\n              }\r\n            />\r\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\r\n            <div className=\"modal__scope\">\r\n              <PeopleAltOutlinedIcon />\r\n              <p>Public</p>\r\n              <ExpandMore />\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__Field\">\r\n            <Input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\r\n            />\r\n            <div className=\"modal__fieldLink\">\r\n              <Link />\r\n              <input\r\n                value={inputUrl}\r\n                onChange={(e) => setInputUrl(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Optional: inclue a link that gives context\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"sumbit\" onClick={handleQuestion} className=\"add\">\r\n              Add Question\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n        <a className=\"code-icon\" href=\"https://github.com/shubhamjha25\" target=\"_blank\" style={{textDecoration:\"none\"}}><CodeIcon /></a>\r\n        <div className=\"qHeader__avatar\">\r\n          <Avatar\r\n            onClick={() => auth.signOut()}\r\n            className=\"Avatar\"\r\n            src={\r\n              user.photo\r\n                ? user.photo\r\n                : \"https://pbs.twimg.com/profile_images/716487122224439296/HWPluyjs.jpg\"\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QHeader;\r\n","S:\\quora-clone\\src\\components\\Post.js",["138","139","140","141","142","143"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Post.css\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport RepeatOutlinedIcon from \"@material-ui/icons/RepeatOutlined\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport { MoreHorizOutlined, ShareOutlined } from \"@material-ui/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport Modal from \"react-modal\";\r\nimport db from \"../firebase\";\r\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Post({ Id, question, imageUrl, timestamp, users }) {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\r\n  const questionId = useSelector(selectQuestionId);\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [getAnswers, setGetAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (questionId) {\r\n      db.collection(\"questions\")\r\n        .doc(questionId)\r\n        .collection(\"answer\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setGetAnswers(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\r\n          )\r\n        );\r\n    }\r\n  }, [questionId]);\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (questionId) {\r\n      db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\r\n        user: user,\r\n        answer: answer,\r\n        questionId: questionId,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n    console.log(questionId);\r\n    setAnswer(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"post\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setQuestionInfo({\r\n            questionId: Id,\r\n            questionName: question,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <div className=\"post__info\">\r\n        <Avatar\r\n          src={\r\n            users.photo\r\n              ? users.photo\r\n              : \"https://images-platform.99static.com//_QXV_u2KU7-ihGjWZVHQb5d-yVM=/238x1326:821x1909/fit-in/500x500/99designs-contests-attachments/119/119362/attachment_119362573\"\r\n          }\r\n        />\r\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\r\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\r\n      </div>\r\n      <div className=\"post__body\">\r\n        <div className=\"post__question\">\r\n          <p>{question}</p>\r\n          <button\r\n            onClick={() => setIsModalOpen(true)}\r\n            className=\"post__btnAnswer\"\r\n          >\r\n            Answer\r\n          </button>\r\n          <Modal\r\n            isOpen={IsmodalOpen}\r\n            onRequestClose={() => setIsModalOpen(false)}\r\n            shouldCloseOnOverlayClick={false}\r\n            style={{\r\n              overlay: {\r\n                width: 680,\r\n                height: 550,\r\n                backgroundColor: \"rgba(0,0,0,0.8)\",\r\n                zIndex: \"1000\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                marginTop: \"-250px\",\r\n                marginLeft: \"-350px\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"modal__question\">\r\n              <h1>{question}</h1>\r\n              <p>\r\n                asked by{\" \"}\r\n                <span className=\"name\">\r\n                  {users.displayName ? users.displayName : users.email}\r\n                </span>{\" \"}\r\n                {\"\"}\r\n                on{\" \"}\r\n                <span className=\"name\">\r\n                  {new Date(timestamp?.toDate()).toLocaleString()}\r\n                </span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal__answer\">\r\n              <textarea\r\n                value={answer}\r\n                onChange={(e) => setAnswer(e.target.value)}\r\n                placeholder=\"Enter Your Answer\"\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div className=\"modal__button\">\r\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\r\n                Add Answer\r\n              </button>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n        <div className=\"post__answer\">\r\n          {getAnswers.map(({ id, answers }) => (\r\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\r\n              {Id === answers.questionId ? (\r\n                <span>\r\n                  {answers.answer}\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      color: \"gray\",\r\n                      fontSize: \"small\",\r\n                      display: \"flex\",\r\n                      right: \"0px\",\r\n                    }}\r\n                  >\r\n                    <span style={{ color: \"#b92b27\" }}>\r\n                      {answers.user.displayName\r\n                        ? answers.user.displayName\r\n                        : answers.user.email}{\" \"}\r\n                      on{\" \"}\r\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\r\n                    </span>\r\n                  </span>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <img src={imageUrl} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","S:\\quora-clone\\src\\components\\WidgetContent.js",["144","145","146","147","148","149","150","151","152"],"import React from \"react\";\r\nimport \"./WidgetContent.css\";\r\n\r\nfunction WidgetContent() {\r\n  return (\r\n    <div className=\"widget__contents\">\r\n      <div className=\"widget__content\">\r\n        <img\r\n          src=\"https://avatars.githubusercontent.com/u/63443481?v=4\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"widget__contentTitle\">\r\n          <h5><a style={{textDecoration:\"none\"}} href=\"https://shubhamjha25.github.io\" target=\"_blank\">SHUBHAM JHA</a></h5>\r\n          <p>Full Stack Web Developer</p>\r\n          <div className=\"social-icons\">\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Linkedin_unofficial_colored_svg-512.png\"></img>\r\n                <a href=\"https://github.com/shubhamjha25\" target=\"_blank\"><img src=\"https://cdn4.iconfinder.com/data/icons/iconsimple-logotypes/512/github-128.png\"></img></a>\r\n                <img src=\"https://cdn3.iconfinder.com/data/icons/capsocial-round/500/facebook-256.png\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"widget__content\">\r\n        <img\r\n          src=\"https://avatars.githubusercontent.com/u/71643172?v=4\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"widget__contentTitle\">\r\n          <h5>SHUBHAM KUMAR CHOUBEY</h5>\r\n          <p>Passionate Coder</p>\r\n          <div className=\"social-icons\">\r\n                <img src=\"https://cdn2.iconfinder.com/data/icons/social-media-2285/512/1_Linkedin_unofficial_colored_svg-512.png\"></img>\r\n                <a href=\"https://github.com/ishubham010\" target=\"_blank\"><img src=\"https://cdn4.iconfinder.com/data/icons/iconsimple-logotypes/512/github-128.png\"></img></a>\r\n                <img src=\"https://cdn3.iconfinder.com/data/icons/capsocial-round/500/facebook-256.png\"></img>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WidgetContent;\r\n","S:\\quora-clone\\src\\components\\QuorBox.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":117,"column":9,"nodeType":"159","endLine":117,"endColumn":121},{"ruleId":"160","severity":1,"message":"161","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":31},{"ruleId":"160","severity":1,"message":"164","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":33},{"ruleId":"160","severity":1,"message":"165","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":26},{"ruleId":"160","severity":1,"message":"166","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":37},{"ruleId":"160","severity":1,"message":"167","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":27},{"ruleId":"160","severity":1,"message":"168","line":8,"column":29,"nodeType":"162","messageId":"163","endLine":8,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":13,"column":15,"nodeType":"159","endLine":13,"endColumn":104},{"ruleId":"169","severity":1,"message":"170","line":16,"column":17,"nodeType":"159","endLine":16,"endColumn":131},{"ruleId":"157","severity":1,"message":"158","line":17,"column":17,"nodeType":"159","endLine":17,"endColumn":75},{"ruleId":"169","severity":1,"message":"170","line":17,"column":75,"nodeType":"159","endLine":17,"endColumn":165},{"ruleId":"169","severity":1,"message":"170","line":18,"column":17,"nodeType":"159","endLine":18,"endColumn":104},{"ruleId":"169","severity":1,"message":"170","line":31,"column":17,"nodeType":"159","endLine":31,"endColumn":131},{"ruleId":"157","severity":1,"message":"158","line":32,"column":17,"nodeType":"159","endLine":32,"endColumn":74},{"ruleId":"169","severity":1,"message":"170","line":32,"column":74,"nodeType":"159","endLine":32,"endColumn":164},{"ruleId":"169","severity":1,"message":"170","line":33,"column":17,"nodeType":"159","endLine":33,"endColumn":104},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'ArrowUpwardOutlinedIcon' is defined but never used.","Identifier","unusedVar","'ArrowDownwardOutlinedIcon' is defined but never used.","'RepeatOutlinedIcon' is defined but never used.","'ChatBubbleOutlineOutlinedIcon' is defined but never used.","'MoreHorizOutlined' is defined but never used.","'ShareOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]